before:
  hooks:
    - go mod tidy

release:
  prerelease: auto
  extra_files:
    - glob: deploy/*.yaml

sboms:
  - artifacts: source

builds:
  - skip: true

dockers:
  - image_templates:
      - "ghcr.io/sozercan/eraser-manager:{{ .Tag }}-amd64"
    dockerfile: Dockerfile
    goarch: amd64
    goos: linux
    use: buildx
    build_flag_templates:
      - "--target=manager"
      - "--platform=linux/amd64"
      - "--cache-from=type=gha,scope=eraser-manager,mode=max"
      - "--cache-to=type=gha,scope=eraser-manager,mode=max"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"
    extra_files:
      - go.mod
      - go.sum
      - main.go
      - pkg
      - controllers
      - api
  - image_templates:
      - "ghcr.io/sozercan/eraser-manager:{{ .Tag }}-arm64"
    goarch: arm64
    goos: linux
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--target=manager"
      - "--platform=linux/arm64"
      - "--cache-from=type=gha,scope=eraser-manager,mode=max"
      - "--cache-to=type=gha,scope=eraser-manager,mode=max"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"
    extra_files:
      - go.mod
      - go.sum
      - main.go
      - pkg
      - controllers
      - api

  - image_templates:
      - "ghcr.io/sozercan/eraser:{{ .Tag }}-amd64"
    goarch: amd64
    goos: linux
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--target=eraser"
      - "--platform=linux/amd64"
      - "--cache-from=type=gha,scope=eraser,mode=max"
      - "--cache-to=type=gha,scope=eraser,mode=max"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"
    extra_files:
      - go.mod
      - go.sum
      - main.go
      - pkg
      - controllers
      - api
  - image_templates:
      - "ghcr.io/sozercan/eraser:{{ .Tag }}-arm64"
    goarch: arm64
    goos: linux
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--target=eraser"
      - "--platform=linux/arm64"
      - "--cache-from=type=gha,scope=eraser,mode=max"
      - "--cache-to=type=gha,scope=eraser,mode=max"
      - "--build-arg=BUILD_DATE={{.Date}}"
      - "--build-arg=BUILD_VERSION={{.Version}}"
      - "--build-arg=VCS_REF={{.FullCommit}}"
      - "--build-arg=VCS_URL={{.GitURL}}"
    extra_files:
      - go.mod
      - go.sum
      - main.go
      - pkg
      - controllers
      - api

docker_manifests:
  - name_template: ghcr.io/sozercan/eraser-manager:{{ .Tag }}
    image_templates:
      - ghcr.io/sozercan/eraser-manager:{{ .Tag }}-amd64
      - ghcr.io/sozercan/eraser-manager:{{ .Tag }}-arm64
  - name_template: ghcr.io/sozercan/eraser-manager:latest
    image_templates:
      - ghcr.io/sozercan/eraser-manager:{{ .Tag }}-amd64
      - ghcr.io/sozercan/eraser-manager:{{ .Tag }}-arm64

  - name_template: ghcr.io/sozercan/eraser:{{ .Tag }}
    image_templates:
      - ghcr.io/sozercan/eraser:{{ .Tag }}-amd64
      - ghcr.io/sozercan/eraser:{{ .Tag }}-arm64
  - name_template: ghcr.io/sozercan/eraser:latest
    image_templates:
      - ghcr.io/sozercan/eraser:{{ .Tag }}-amd64
      - ghcr.io/sozercan/eraser:{{ .Tag }}-arm64

changelog:
  skip: false
  use: github
  groups:
    - title: Bug Fixes üêû
      regexp: ^.*fix[(\\w)]*:+.*$
    - title: Build üè≠
      regexp: ^.*build[(\\w)]*:+.*$
    - title: Code Refactoring üíé
      regexp: ^.*refactor[(\\w)]*:+.*$
    - title: Code Style üé∂
      regexp: ^.*style[(\\w)]*:+.*$
    - title: Continuous Integration üíú
      regexp: ^.*ci[(\\w)]*:+.*$
    - title: Documentation üìò
      regexp: ^.*docs[(\\w)]*:+.*$
    - title: Features üåà
      regexp: ^.*feat[(\\w)]*:+.*$
    - title: Maintenance üîß
      regexp: ^.*chore[(\\w)]*:+.*$
    - title: Performance Improvements üöÄ
      regexp: ^.*perf[(\\w)]*:+.*$
    - title: Revert Change ‚óÄÔ∏è
      regexp: ^.*revert[(\\w)]*:+.*$
    - title: Security Fix üõ°Ô∏è
      regexp: ^.*security[(\\w)]*:+.*$
    - title: Testing üíö
      regexp: ^.*test[(\\w)]*:+.*$